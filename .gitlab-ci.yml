stages:
  - test
  - build
  - deploy

include:
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml

variables:
  ENVIRONMENT: unset
  CHART_NAME: unset

workflow:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+-staging$/'
      variables:
        ENVIRONMENT: staging
        CHART_NAME: beep-frontend-staging
        IMAGE_NAME: 'hugo08/beep-front-staging'
    - if: '$CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/'
      variables:
        ENVIRONMENT: production
        CHART_NAME: beep-frontend
        IMAGE_NAME: 'milou666/beep-front'
    - if: '$CI_PIPELINE_SOURCE == "push"'

before_script:
  - export VERSION=$(echo $CI_COMMIT_TAG | sed 's/-staging//')

lint:
  stage: test
  image: node:18.17.1
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-9 --activate
    - pnpm config set store-dir .pnpm-store
  script:
    - echo "Building image with tag ${WEBRTC_URL_ENDPOINT}"
    - pnpm install
    - pnpm lint
  when: always

build:
  stage: build
  needs: ['lint']
  rules:
    - if: $CI_COMMIT_TAG
  image:
    name: 'gcr.io/kaniko-project/executor:v1.14.0-debug'
    entrypoint:
      - ''
  script:
    - echo "Building image with tag $CI_REGISTRY_IMAGE/$CHART_NAME:$VERSION and for api ${API_URL_ENDPOINT}"
    - echo "Building image with tag ${WEBRTC_URL_ENDPOINT}"

    - >-
      echo
      "{\"auths\":{\"https://index.docker.io/v1/\":{\"username\":\"$USER_DOCKERHUB\",\"password\":\"$PASSWORD_DOCKERHUB\"}}}"
      > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --build-arg "VITE_BACKEND_URL=${API_URL_ENDPOINT}" --build-arg "VITE_WEBRTC_URL=${WEBRTC_URL_ENDPOINT}" --destination $IMAGE_NAME:$VERSION
  environment:
    name: $ENVIRONMENT

deploy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  image:
    name: alpine/helm:latest
    entrypoint: ['']
  needs: ['build']
  script:
    - wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O yq && chmod +x ./yq
    - DOMAIN=$(echo $FRONT_URL_ENDPOINT | awk -F[/:] '{print $4}')
    - ./yq '. *= load("helm/values.'$ENVIRONMENT'.yaml")' helm/values.global.yaml > helm/values.yaml
    - ./yq -i ".name=\"$CHART_NAME\"" helm/Chart.yaml
    - helm package helm/ --version $VERSION --app-version $VERSION
    - curl --request POST --user gitlab-ci-token:$CI_JOB_TOKEN --form "chart=@$CHART_NAME-$VERSION.tgz" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/$ENVIRONMENT/charts"
  environment:
    name: $ENVIRONMENT
