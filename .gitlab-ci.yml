stages:
  - test
  - build
  - deploy

include:
  - template: Jobs/Dependency-Scanning.gitlab-ci.yml

variables:
  DEPLOY_VARIABLE: unset
  CHART_NAME: unset

workflow:
  rules:
    - if: '$CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+-staging$/'
      variables:
        DEPLOY_VARIABLE: staging
        CHART_NAME: beep-frontend-staging
    - if: '$CI_COMMIT_TAG =~ /^[0-9]+\.[0-9]+\.[0-9]+$/'
      variables:
        DEPLOY_VARIABLE: production
        CHART_NAME: beep-frontend
    - if: '$CI_PIPELINE_SOURCE == "push"'


lint:
  stage: test
  image: node:18.17.1
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest-9 --activate
    - pnpm config set store-dir .pnpm-store
  script:
    - pnpm install
    - pnpm lint
  when: always

build:
  stage: build
  dependencies:
    - lint
  rules:
    - if: $CI_COMMIT_TAG
  image:
    name: 'gcr.io/kaniko-project/executor:v1.14.0-debug'
    entrypoint:
      - ''
  script:
    - echo "Building image with tag $CI_REGISTRY_IMAGE/$CHART_NAME:$CI_COMMIT_TAG and for api ${API_URL_ENDPOINT}"
    - >-
      echo
      "{\"auths\":{\"https://index.docker.io/v1/\":{\"username\":\"$USER_DOCKERHUB\",\"password\":\"$PASSWORD_DOCKERHUB\"}}}"
      > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --build-arg "VITE_BACKEND_URL=${API_URL_ENDPOINT}" --build-arg "VITE_WEBRTC_URL=${WEBRTC_URL_ENDPOINT}" --destination milou666/beep-front:$CI_COMMIT_TAG
  environment:
    name: $DEPLOY_VARIABLE

package-helm:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  image: 'alpine/helm:latest'
  dependencies:
    - build
  script:
    - wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O yq && chmod +x ./yq
    - export VERSION=$CI_COMMIT_TAG
    # Echo pour débogage des variables d'environnement
    - 'echo "FRONT_URL_ENDPOINT: $FRONT_URL_ENDPOINT"'
    - 'echo "API_URL_ENDPOINT: $API_URL_ENDPOINT"'
    - 'echo "VERSION: $VERSION"'
    - 'echo "CHART_NAME: $CHART_NAME"'
    # Extraire le domaine de FRONT_URL_ENDPOINT
    - DOMAIN=$(echo $FRONT_URL_ENDPOINT | awk -F[/:] '{print $4}')
    - 'echo "Extracted DOMAIN: $DOMAIN"'
    # Modifier le fichier values.yaml avec les variables extraites
    - ./yq -i ".ingress.hosts[0].host=\"$DOMAIN\"" helm/values.yaml
    - ./yq -i ".backend.url=\"$API_URL_ENDPOINT\"" helm/values.yaml
    - ./yq -i ".webrtc.url=\"$WEBRTC_URL_ENDPOINT\"" helm/values.yaml
    - ./yq -i ".name=\"$CHART_NAME\"" helm/Chart.yaml
    # Vérifier le contenu de values.yaml après modification
    - cat helm/values.yaml
    - helm package helm/ --version $VERSION --app-version $VERSION
    - curl --request POST --user gitlab-ci-token:$CI_JOB_TOKEN --form "chart=@$CHART_NAME-$VERSION.tgz" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/$DEPLOY_VARIABLE/charts"
  environment:
    name: $DEPLOY_VARIABLE
